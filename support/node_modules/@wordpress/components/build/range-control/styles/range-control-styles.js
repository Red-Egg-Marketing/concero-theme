"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionRightWrapper = exports.InputNumber = exports.Tooltip = exports.InputRange = exports.Thumb = exports.ThumbWrapper = exports.MarkLabel = exports.Mark = exports.MarksWrapper = exports.Track = exports.Rail = exports.AfterIconWrapper = exports.BeforeIconWrapper = exports.Wrapper = exports.Root = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _core = require("@emotion/core");

var _styleMixins = require("../../utils/style-mixins");

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var _ref = process.env.NODE_ENV === "production" ? {
  name: "tdik1c",
  styles: "height:30px;min-height:30px;"
} : {
  name: "tdik1c",
  styles: "height:30px;min-height:30px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var rangeHeight = function rangeHeight() {
  return _ref;
};

var Root = (0, _styledBase.default)("span", {
  target: "exqw8y20",
  label: "Root"
})(process.env.NODE_ENV === "production" ? {
  name: "1916452",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;cursor:pointer;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%;"
} : {
  name: "1916452",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;cursor:pointer;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
exports.Root = Root;

var wrapperMargin = function wrapperMargin(_ref4) {
  var marks = _ref4.marks;
  return /*#__PURE__*/(0, _core.css)({
    marginBottom: marks ? 16 : null
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Wrapper = (0, _styledBase.default)("span", {
  target: "exqw8y21",
  label: "Wrapper"
})("box-sizing:border-box;color:", (0, _styleMixins.color)('blue.medium.focus'), ";display:block;padding-top:15px;position:relative;width:100%;", rangeHeight, ";", wrapperMargin, ";", (0, _styleMixins.rtl)({
  marginLeft: 10
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.Wrapper = Wrapper;
var BeforeIconWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y22",
  label: "BeforeIconWrapper"
})("margin-top:3px;", (0, _styleMixins.rtl)({
  marginRight: 6
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.BeforeIconWrapper = BeforeIconWrapper;
var AfterIconWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y23",
  label: "AfterIconWrapper"
})("margin-top:3px;", (0, _styleMixins.rtl)({
  marginLeft: 16
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUQyQyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3JhbmdlLWNvbnRyb2wvc3R5bGVzL3JhbmdlLWNvbnRyb2wtc3R5bGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNvbG9yLCByZWR1Y2VNb3Rpb24sIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlLW1peGlucyc7XG5cbmNvbnN0IHJhbmdlSGVpZ2h0ID0gKCkgPT4gY3NzKCB7IGhlaWdodDogMzAsIG1pbkhlaWdodDogMzAgfSApO1xuXG5leHBvcnQgY29uc3QgUm9vdCA9IHN0eWxlZC5zcGFuYFxuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRwYWRkaW5nOiAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHRvdWNoLWFjdGlvbjogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB3cmFwcGVyTWFyZ2luID0gKCB7IG1hcmtzIH0gKSA9PlxuXHRjc3MoIHsgbWFyZ2luQm90dG9tOiBtYXJrcyA/IDE2IDogbnVsbCB9ICk7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBjb2xvciggJ2JsdWUubWVkaXVtLmZvY3VzJyApIH07XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwYWRkaW5nLXRvcDogMTVweDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblxuXHQkeyByYW5nZUhlaWdodCB9O1xuXHQkeyB3cmFwcGVyTWFyZ2luIH07XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDEwIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQmVmb3JlSWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogNiB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFmdGVySWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAxNiB9ICkgfVxuYDtcblxuY29uc3QgZGlzYWJsZWRSYWlsQmFja2dyb3VuZENvbG9yID0gKCB7IGRpc2FibGVkIH0gKSA9PiB7XG5cdGlmICggISBkaXNhYmxlZCApIHJldHVybiAnJztcblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmRDb2xvcjogY29sb3IoICdsaWdodEdyYXkuNDAwJyApLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgUmFpbCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBjb2xvciggJ2xpZ2h0R3JheS42MDAnICkgfTtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0bGVmdDogMDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHJpZ2h0OiAwO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAzcHg7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bWFyZ2luLXRvcDogMTRweDtcblx0dG9wOiAwO1xuXG5cdCR7IGRpc2FibGVkUmFpbEJhY2tncm91bmRDb2xvciB9O1xuYDtcblxuY29uc3QgZGlzYWJsZWRCYWNrZ3JvdW5kQ29sb3IgPSAoIHsgZGlzYWJsZWQgfSApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yOiBjb2xvciggJ2xpZ2h0R3JheS44MDAnICksXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUcmFjayA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdGJvcmRlci1yYWRpdXM6IDFweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAzcHg7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgZGlzYWJsZWRCYWNrZ3JvdW5kQ29sb3IgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBNYXJrc1dyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0d2lkdGg6IDEwMCU7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuYDtcblxuY29uc3QgbWFya0ZpbGwgPSAoIHsgaXNGaWxsZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmRDb2xvcjogaXNGaWxsZWQgPyAnY3VycmVudENvbG9yJyA6IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IE1hcmsgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiA5cHg7XG5cdGxlZnQ6IDA7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAtNHB4O1xuXHR3aWR0aDogMXB4O1xuXG5cdCR7IG1hcmtGaWxsIH07XG5cdCR7IGRpc2FibGVkQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5jb25zdCBtYXJrTGFiZWxGaWxsID0gKCB7IGlzRmlsbGVkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogaXNGaWxsZWQgPyBjb2xvciggJ2RhcmtHcmF5LjMwMCcgKSA6IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IE1hcmtMYWJlbCA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjb2xvcjogJHsgY29sb3IoICdsaWdodEdyYXkuNjAwJyApIH07XG5cdGxlZnQ6IDA7XG5cdGZvbnQtc2l6ZTogMTFweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDEycHg7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCggLTUwJSApO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG5cdCR7IG1hcmtMYWJlbEZpbGwgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBUaHVtYldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogZmxleDtcblx0aGVpZ2h0OiAyMHB4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0bWFyZ2luLXRvcDogNXB4O1xuXHRvdXRsaW5lOiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogMjBweDtcblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogLTEwIH0gKSB9XG5gO1xuXG5jb25zdCB0aHVtYkZvY3VzID0gKCB7IGlzRm9jdXNlZCB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0Ym9yZGVyQ29sb3I6IGlzRm9jdXNlZFxuXHRcdFx0PyBjb2xvciggJ2JsdWUubWVkaXVtLmZvY3VzJyApXG5cdFx0XHQ6IGNvbG9yKCAnZGFya0dyYXkuMjAwJyApLFxuXHRcdGJveFNoYWRvdzogaXNGb2N1c2VkXG5cdFx0XHQ/IGBcblx0XHRcdFx0MCAwIDAgMXB4ICR7IGNvbG9yKCAnYmx1ZS5tZWRpdW0uZm9jdXMnICkgfVxuXHRcdFx0YFxuXHRcdFx0OiBgXG5cdFx0XHRcdDAgMCAwIHJnYmEoMCwgMCwgMCwgMClcblx0XHRcdGAsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUaHVtYiA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRib3JkZXI6IDFweCBzb2xpZCAkeyBjb2xvciggJ2RhcmtHcmF5LjIwMCcgKSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDEwMCU7XG5cdG91dGxpbmU6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogMTAwJTtcblxuXHQkeyB0aHVtYkZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRSYW5nZSA9IHN0eWxlZC5pbnB1dGBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y3Vyc29yOiBwb2ludGVyO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAxMDAlO1xuXHRsZWZ0OiAwO1xuXHRtYXJnaW46IDA7XG5cdG9wYWNpdHk6IDA7XG5cdG91dGxpbmU6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cmlnaHQ6IDA7XG5cdHRvcDogMDtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB0b29sdGlwU2hvdyA9ICggeyBzaG93IH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRvcGFjaXR5OiBzaG93ID8gMSA6IDAsXG5cdH0gKTtcbn07XG5cbmNvbnN0IHRvb2x0aXBQb3NpdGlvbiA9ICggeyBwb3NpdGlvbiB9ICkgPT4ge1xuXHRjb25zdCBpc1RvcCA9IHBvc2l0aW9uID09PSAndG9wJztcblxuXHRpZiAoIGlzVG9wICkge1xuXHRcdHJldHVybiBjc3NgXG5cdFx0XHRtYXJnaW4tdG9wOiAtNHB4O1xuXHRcdFx0dG9wOiAtMTAwJTtcblxuXHRcdFx0Jjo6YWZ0ZXIge1xuXHRcdFx0XHRib3JkZXItYm90dG9tOiBub25lO1xuXHRcdFx0XHRib3JkZXItdG9wLXN0eWxlOiBzb2xpZDtcblx0XHRcdFx0Ym90dG9tOiAtNnB4O1xuXHRcdFx0fVxuXHRcdGA7XG5cdH1cblxuXHRyZXR1cm4gY3NzYFxuXHRcdG1hcmdpbi1ib3R0b206IC00cHg7XG5cdFx0Ym90dG9tOiAtMTAwJTtcblxuXHRcdCY6OmFmdGVyIHtcblx0XHRcdGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xuXHRcdFx0Ym9yZGVyLXRvcDogbm9uZTtcblx0XHRcdHRvcDogLTZweDtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kOiAkeyBjb2xvciggJ2RhcmtHcmF5LjgwMCcgKSB9O1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiB3aGl0ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDExcHg7XG5cdG1pbi13aWR0aDogMzJweDtcblx0b3BhY2l0eTogMDtcblx0cGFkZGluZzogOHB4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMTIwbXMgZWFzZTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cblx0Jjo6YWZ0ZXIge1xuXHRcdGJvcmRlcjogNnB4IHNvbGlkICR7IGNvbG9yKCAnZGFya0dyYXkuODAwJyApIH07XG5cdFx0Ym9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRcdGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0Ym90dG9tOiAtNnB4O1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0aGVpZ2h0OiAwO1xuXHRcdGxlZnQ6IDUwJTtcblx0XHRsaW5lLWhlaWdodDogMDtcblx0XHRtYXJnaW4tbGVmdDogLTZweDtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0d2lkdGg6IDA7XG5cdH1cblxuXHQkeyB0b29sdGlwU2hvdyB9O1xuXHQkeyB0b29sdGlwUG9zaXRpb24gfTtcblx0JHsgcmVkdWNlTW90aW9uKCAndHJhbnNpdGlvbicgKSB9O1xuXHQkeyBydGwoXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyB9LFxuXHRcdHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCg1MCUpJyB9XG5cdCkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0TnVtYmVyID0gc3R5bGVkLmlucHV0YFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdG1hcmdpbi10b3A6IDA7XG5cdG1pbi13aWR0aDogNTRweDtcblx0bWF4LXdpZHRoOiAxMjBweDtcblxuXHRpbnB1dFt0eXBlPSdudW1iZXInXSYge1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMTYgfSApIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25SaWdodFdyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbi10b3A6IDA7XG5cblx0YnV0dG9uLFxuXHRidXR0b24uaXMtc21hbGwge1xuXHRcdG1hcmdpbi1sZWZ0OiAwO1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogOCB9ICkgfVxuYDtcbiJdfQ== */");
exports.AfterIconWrapper = AfterIconWrapper;

var disabledRailBackgroundColor = function disabledRailBackgroundColor(_ref5) {
  var disabled = _ref5.disabled;
  if (!disabled) return '';
  return /*#__PURE__*/(0, _core.css)({
    backgroundColor: (0, _styleMixins.color)('lightGray.400')
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Rail = (0, _styledBase.default)("span", {
  target: "exqw8y24",
  label: "Rail"
})("background-color:", (0, _styleMixins.color)('lightGray.600'), ";box-sizing:border-box;left:0;pointer-events:none;right:0;display:block;height:3px;position:absolute;margin-top:14px;top:0;", disabledRailBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.Rail = Rail;

var disabledBackgroundColor = function disabledBackgroundColor(_ref6) {
  var disabled = _ref6.disabled;
  if (!disabled) return '';
  return /*#__PURE__*/(0, _core.css)({
    backgroundColor: (0, _styleMixins.color)('lightGray.800')
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Track = (0, _styledBase.default)("span", {
  target: "exqw8y25",
  label: "Track"
})("background-color:currentColor;border-radius:1px;box-sizing:border-box;height:3px;pointer-events:none;display:block;position:absolute;margin-top:14px;top:0;", disabledBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.Track = Track;
var MarksWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y26",
  label: "MarksWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "sx8y8z",
  styles: "box-sizing:border-box;display:block;position:relative;width:100%;user-select:none;"
} : {
  name: "sx8y8z",
  styles: "box-sizing:border-box;display:block;position:relative;width:100%;user-select:none;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
exports.MarksWrapper = MarksWrapper;

var markFill = function markFill(_ref7) {
  var isFilled = _ref7.isFilled;
  return /*#__PURE__*/(0, _core.css)({
    backgroundColor: isFilled ? 'currentColor' : (0, _styleMixins.color)('lightGray.600')
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Mark = (0, _styledBase.default)("span", {
  target: "exqw8y27",
  label: "Mark"
})("box-sizing:border-box;height:9px;left:0;position:absolute;top:-4px;width:1px;", markFill, ";", disabledBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.Mark = Mark;

var markLabelFill = function markLabelFill(_ref8) {
  var isFilled = _ref8.isFilled;
  return /*#__PURE__*/(0, _core.css)({
    color: isFilled ? (0, _styleMixins.color)('darkGray.300') : (0, _styleMixins.color)('lightGray.600')
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var MarkLabel = (0, _styledBase.default)("span", {
  target: "exqw8y28",
  label: "MarkLabel"
})("box-sizing:border-box;color:", (0, _styleMixins.color)('lightGray.600'), ";left:0;font-size:11px;position:absolute;top:12px;transform:translateX( -50% );white-space:nowrap;", markLabelFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.MarkLabel = MarkLabel;
var ThumbWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y29",
  label: "ThumbWrapper"
})("align-items:center;box-sizing:border-box;display:flex;height:20px;justify-content:center;margin-top:5px;outline:0;pointer-events:none;position:absolute;top:0;user-select:none;width:20px;", (0, _styleMixins.rtl)({
  marginLeft: -10
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0l1QyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3JhbmdlLWNvbnRyb2wvc3R5bGVzL3JhbmdlLWNvbnRyb2wtc3R5bGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNvbG9yLCByZWR1Y2VNb3Rpb24sIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlLW1peGlucyc7XG5cbmNvbnN0IHJhbmdlSGVpZ2h0ID0gKCkgPT4gY3NzKCB7IGhlaWdodDogMzAsIG1pbkhlaWdodDogMzAgfSApO1xuXG5leHBvcnQgY29uc3QgUm9vdCA9IHN0eWxlZC5zcGFuYFxuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRwYWRkaW5nOiAwO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHRvdWNoLWFjdGlvbjogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB3cmFwcGVyTWFyZ2luID0gKCB7IG1hcmtzIH0gKSA9PlxuXHRjc3MoIHsgbWFyZ2luQm90dG9tOiBtYXJrcyA/IDE2IDogbnVsbCB9ICk7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLnNwYW5gXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiAkeyBjb2xvciggJ2JsdWUubWVkaXVtLmZvY3VzJyApIH07XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRwYWRkaW5nLXRvcDogMTVweDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblxuXHQkeyByYW5nZUhlaWdodCB9O1xuXHQkeyB3cmFwcGVyTWFyZ2luIH07XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDEwIH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQmVmb3JlSWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogNiB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFmdGVySWNvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0bWFyZ2luLXRvcDogM3B4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAxNiB9ICkgfVxuYDtcblxuY29uc3QgZGlzYWJsZWRSYWlsQmFja2dyb3VuZENvbG9yID0gKCB7IGRpc2FibGVkIH0gKSA9PiB7XG5cdGlmICggISBkaXNhYmxlZCApIHJldHVybiAnJztcblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmRDb2xvcjogY29sb3IoICdsaWdodEdyYXkuNDAwJyApLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgUmFpbCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBjb2xvciggJ2xpZ2h0R3JheS42MDAnICkgfTtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0bGVmdDogMDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdHJpZ2h0OiAwO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAzcHg7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bWFyZ2luLXRvcDogMTRweDtcblx0dG9wOiAwO1xuXG5cdCR7IGRpc2FibGVkUmFpbEJhY2tncm91bmRDb2xvciB9O1xuYDtcblxuY29uc3QgZGlzYWJsZWRCYWNrZ3JvdW5kQ29sb3IgPSAoIHsgZGlzYWJsZWQgfSApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yOiBjb2xvciggJ2xpZ2h0R3JheS44MDAnICksXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUcmFjayA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdGJvcmRlci1yYWRpdXM6IDFweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAzcHg7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgZGlzYWJsZWRCYWNrZ3JvdW5kQ29sb3IgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBNYXJrc1dyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0d2lkdGg6IDEwMCU7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuYDtcblxuY29uc3QgbWFya0ZpbGwgPSAoIHsgaXNGaWxsZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmRDb2xvcjogaXNGaWxsZWQgPyAnY3VycmVudENvbG9yJyA6IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IE1hcmsgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiA5cHg7XG5cdGxlZnQ6IDA7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAtNHB4O1xuXHR3aWR0aDogMXB4O1xuXG5cdCR7IG1hcmtGaWxsIH07XG5cdCR7IGRpc2FibGVkQmFja2dyb3VuZENvbG9yIH07XG5gO1xuXG5jb25zdCBtYXJrTGFiZWxGaWxsID0gKCB7IGlzRmlsbGVkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogaXNGaWxsZWQgPyBjb2xvciggJ2RhcmtHcmF5LjMwMCcgKSA6IGNvbG9yKCAnbGlnaHRHcmF5LjYwMCcgKSxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IE1hcmtMYWJlbCA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjb2xvcjogJHsgY29sb3IoICdsaWdodEdyYXkuNjAwJyApIH07XG5cdGxlZnQ6IDA7XG5cdGZvbnQtc2l6ZTogMTFweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDEycHg7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCggLTUwJSApO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG5cdCR7IG1hcmtMYWJlbEZpbGwgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBUaHVtYldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogZmxleDtcblx0aGVpZ2h0OiAyMHB4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0bWFyZ2luLXRvcDogNXB4O1xuXHRvdXRsaW5lOiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogMjBweDtcblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogLTEwIH0gKSB9XG5gO1xuXG5jb25zdCB0aHVtYkZvY3VzID0gKCB7IGlzRm9jdXNlZCB9ICkgPT4ge1xuXHRyZXR1cm4gY3NzKCB7XG5cdFx0Ym9yZGVyQ29sb3I6IGlzRm9jdXNlZFxuXHRcdFx0PyBjb2xvciggJ2JsdWUubWVkaXVtLmZvY3VzJyApXG5cdFx0XHQ6IGNvbG9yKCAnZGFya0dyYXkuMjAwJyApLFxuXHRcdGJveFNoYWRvdzogaXNGb2N1c2VkXG5cdFx0XHQ/IGBcblx0XHRcdFx0MCAwIDAgMXB4ICR7IGNvbG9yKCAnYmx1ZS5tZWRpdW0uZm9jdXMnICkgfVxuXHRcdFx0YFxuXHRcdFx0OiBgXG5cdFx0XHRcdDAgMCAwIHJnYmEoMCwgMCwgMCwgMClcblx0XHRcdGAsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUaHVtYiA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRib3JkZXI6IDFweCBzb2xpZCAkeyBjb2xvciggJ2RhcmtHcmF5LjIwMCcgKSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDEwMCU7XG5cdG91dGxpbmU6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHVzZXItc2VsZWN0OiBub25lO1xuXHR3aWR0aDogMTAwJTtcblxuXHQkeyB0aHVtYkZvY3VzIH07XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRSYW5nZSA9IHN0eWxlZC5pbnB1dGBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y3Vyc29yOiBwb2ludGVyO1xuXHRkaXNwbGF5OiBibG9jaztcblx0aGVpZ2h0OiAxMDAlO1xuXHRsZWZ0OiAwO1xuXHRtYXJnaW46IDA7XG5cdG9wYWNpdHk6IDA7XG5cdG91dGxpbmU6IG5vbmU7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cmlnaHQ6IDA7XG5cdHRvcDogMDtcblx0d2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCB0b29sdGlwU2hvdyA9ICggeyBzaG93IH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRvcGFjaXR5OiBzaG93ID8gMSA6IDAsXG5cdH0gKTtcbn07XG5cbmNvbnN0IHRvb2x0aXBQb3NpdGlvbiA9ICggeyBwb3NpdGlvbiB9ICkgPT4ge1xuXHRjb25zdCBpc1RvcCA9IHBvc2l0aW9uID09PSAndG9wJztcblxuXHRpZiAoIGlzVG9wICkge1xuXHRcdHJldHVybiBjc3NgXG5cdFx0XHRtYXJnaW4tdG9wOiAtNHB4O1xuXHRcdFx0dG9wOiAtMTAwJTtcblxuXHRcdFx0Jjo6YWZ0ZXIge1xuXHRcdFx0XHRib3JkZXItYm90dG9tOiBub25lO1xuXHRcdFx0XHRib3JkZXItdG9wLXN0eWxlOiBzb2xpZDtcblx0XHRcdFx0Ym90dG9tOiAtNnB4O1xuXHRcdFx0fVxuXHRcdGA7XG5cdH1cblxuXHRyZXR1cm4gY3NzYFxuXHRcdG1hcmdpbi1ib3R0b206IC00cHg7XG5cdFx0Ym90dG9tOiAtMTAwJTtcblxuXHRcdCY6OmFmdGVyIHtcblx0XHRcdGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xuXHRcdFx0Ym9yZGVyLXRvcDogbm9uZTtcblx0XHRcdHRvcDogLTZweDtcblx0XHR9XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kOiAkeyBjb2xvciggJ2RhcmtHcmF5LjgwMCcgKSB9O1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGNvbG9yOiB3aGl0ZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LXNpemU6IDExcHg7XG5cdG1pbi13aWR0aDogMzJweDtcblx0b3BhY2l0eTogMDtcblx0cGFkZGluZzogOHB4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMTIwbXMgZWFzZTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cblx0Jjo6YWZ0ZXIge1xuXHRcdGJvcmRlcjogNnB4IHNvbGlkICR7IGNvbG9yKCAnZGFya0dyYXkuODAwJyApIH07XG5cdFx0Ym9yZGVyLWxlZnQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRcdGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0Ym90dG9tOiAtNnB4O1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0aGVpZ2h0OiAwO1xuXHRcdGxlZnQ6IDUwJTtcblx0XHRsaW5lLWhlaWdodDogMDtcblx0XHRtYXJnaW4tbGVmdDogLTZweDtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0d2lkdGg6IDA7XG5cdH1cblxuXHQkeyB0b29sdGlwU2hvdyB9O1xuXHQkeyB0b29sdGlwUG9zaXRpb24gfTtcblx0JHsgcmVkdWNlTW90aW9uKCAndHJhbnNpdGlvbicgKSB9O1xuXHQkeyBydGwoXG5cdFx0eyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyB9LFxuXHRcdHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCg1MCUpJyB9XG5cdCkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0TnVtYmVyID0gc3R5bGVkLmlucHV0YFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdG1hcmdpbi10b3A6IDA7XG5cdG1pbi13aWR0aDogNTRweDtcblx0bWF4LXdpZHRoOiAxMjBweDtcblxuXHRpbnB1dFt0eXBlPSdudW1iZXInXSYge1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMTYgfSApIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBBY3Rpb25SaWdodFdyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbi10b3A6IDA7XG5cblx0YnV0dG9uLFxuXHRidXR0b24uaXMtc21hbGwge1xuXHRcdG1hcmdpbi1sZWZ0OiAwO1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogOCB9ICkgfVxuYDtcbiJdfQ== */");
exports.ThumbWrapper = ThumbWrapper;

var thumbFocus = function thumbFocus(_ref9) {
  var isFocused = _ref9.isFocused;
  return /*#__PURE__*/(0, _core.css)({
    borderColor: isFocused ? (0, _styleMixins.color)('blue.medium.focus') : (0, _styleMixins.color)('darkGray.200'),
    boxShadow: isFocused ? "\n\t\t\t\t0 0 0 1px ".concat((0, _styleMixins.color)('blue.medium.focus'), "\n\t\t\t") : "\n\t\t\t\t0 0 0 rgba(0, 0, 0, 0)\n\t\t\t"
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var Thumb = (0, _styledBase.default)("span", {
  target: "exqw8y210",
  label: "Thumb"
})("align-items:center;background-color:white;border-radius:50%;border:1px solid ", (0, _styleMixins.color)('darkGray.200'), ";box-sizing:border-box;height:100%;outline:0;pointer-events:none;position:absolute;user-select:none;width:100%;", thumbFocus, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
exports.Thumb = Thumb;
var InputRange = (0, _styledBase.default)("input", {
  target: "exqw8y211",
  label: "InputRange"
})(process.env.NODE_ENV === "production" ? {
  name: "cvc9dl",
  styles: "box-sizing:border-box;cursor:pointer;display:block;height:100%;left:0;margin:0;opacity:0;outline:none;position:absolute;right:0;top:0;width:100%;"
} : {
  name: "cvc9dl",
  styles: "box-sizing:border-box;cursor:pointer;display:block;height:100%;left:0;margin:0;opacity:0;outline:none;position:absolute;right:0;top:0;width:100%;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
exports.InputRange = InputRange;

var tooltipShow = function tooltipShow(_ref10) {
  var show = _ref10.show;
  return /*#__PURE__*/(0, _core.css)({
    opacity: show ? 1 : 0
  }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "3iklnv",
  styles: "margin-top:-4px;top:-100%;&::after{border-bottom:none;border-top-style:solid;bottom:-6px;}"
} : {
  name: "3iklnv",
  styles: "margin-top:-4px;top:-100%;&::after{border-bottom:none;border-top-style:solid;bottom:-6px;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref3 = process.env.NODE_ENV === "production" ? {
  name: "u3sel8",
  styles: "margin-bottom:-4px;bottom:-100%;&::after{border-bottom-style:solid;border-top:none;top:-6px;}"
} : {
  name: "u3sel8",
  styles: "margin-bottom:-4px;bottom:-100%;&::after{border-bottom-style:solid;border-top:none;top:-6px;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var tooltipPosition = function tooltipPosition(_ref11) {
  var position = _ref11.position;
  var isTop = position === 'top';

  if (isTop) {
    return _ref2;
  }

  return _ref3;
};

var Tooltip = (0, _styledBase.default)("span", {
  target: "exqw8y212",
  label: "Tooltip"
})("background:", (0, _styleMixins.color)('darkGray.800'), ";border-radius:3px;box-sizing:border-box;color:white;display:inline-block;font-size:11px;min-width:32px;opacity:0;padding:8px;pointer-events:none;position:absolute;text-align:center;transition:opacity 120ms ease;user-select:none;&::after{border:6px solid ", (0, _styleMixins.color)('darkGray.800'), ";border-left-color:transparent;border-right-color:transparent;bottom:-6px;box-sizing:border-box;content:'';height:0;left:50%;line-height:0;margin-left:-6px;position:absolute;width:0;}", tooltipShow, ";", tooltipPosition, ";", (0, _styleMixins.reduceMotion)('transition'), ";", (0, _styleMixins.rtl)({
  transform: 'translateX(-50%)'
}, {
  transform: 'translateX(50%)'
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.Tooltip = Tooltip;
var InputNumber = (0, _styledBase.default)("input", {
  target: "exqw8y213",
  label: "InputNumber"
})("box-sizing:border-box;display:inline-block;margin-top:0;min-width:54px;max-width:120px;input[type='number']&{", rangeHeight, ";}", (0, _styleMixins.rtl)({
  marginLeft: 16
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.InputNumber = InputNumber;
var ActionRightWrapper = (0, _styledBase.default)("span", {
  target: "exqw8y214",
  label: "ActionRightWrapper"
})("box-sizing:border-box;display:block;margin-top:0;button,button.is-small{margin-left:0;", rangeHeight, ";}", (0, _styleMixins.rtl)({
  marginLeft: 8
}), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
exports.ActionRightWrapper = ActionRightWrapper;
//# sourceMappingURL=range-control-styles.js.map