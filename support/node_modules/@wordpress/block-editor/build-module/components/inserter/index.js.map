{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/index.js"],"names":["size","speak","__","_x","sprintf","Dropdown","Button","Component","withDispatch","withSelect","compose","ifCondition","createBlock","plus","InserterMenu","defaultRenderToggle","onToggle","disabled","isOpen","blockTitle","hasSingleBlockType","toggleProps","label","Inserter","arguments","bind","renderToggle","renderContent","props","onClose","rootClientId","clientId","isAppender","showInserterHelpPanel","selectBlockOnInsert","__experimentalSelectBlockOnInsert","position","insertOnlyAllowedBlock","select","getBlockRootClientId","hasInserterItems","__experimentalGetAllowedBlocks","getBlockVariations","undefined","allowedBlocks","name","allowedBlockType","hasItems","title","dispatch","ownProps","getInsertionIndex","getBlockIndex","getBlockSelectionEnd","getBlockOrder","end","length","insertBlock","blockToInsert","message"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { size } from 'lodash';\n/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport { plus } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport InserterMenu from './menu';\n\nconst defaultRenderToggle = ( {\n\tonToggle,\n\tdisabled,\n\tisOpen,\n\tblockTitle,\n\thasSingleBlockType,\n\ttoggleProps,\n} ) => {\n\tlet label;\n\tif ( hasSingleBlockType ) {\n\t\tlabel = sprintf(\n\t\t\t// translators: %s: the name of the block when there is only one\n\t\t\t_x( 'Add %s', 'directly add the only allowed block' ),\n\t\t\tblockTitle\n\t\t);\n\t} else {\n\t\tlabel = _x( 'Add block', 'Generic label for block inserter button' );\n\t}\n\treturn (\n\t\t<Button\n\t\t\ticon={ plus }\n\t\t\tlabel={ label }\n\t\t\ttooltipPosition=\"bottom\"\n\t\t\tonClick={ onToggle }\n\t\t\tclassName=\"block-editor-inserter__toggle\"\n\t\t\taria-haspopup={ ! hasSingleBlockType ? 'true' : false }\n\t\t\taria-expanded={ ! hasSingleBlockType ? isOpen : false }\n\t\t\tdisabled={ disabled }\n\t\t\t{ ...toggleProps }\n\t\t/>\n\t);\n};\n\nclass Inserter extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onToggle = this.onToggle.bind( this );\n\t\tthis.renderToggle = this.renderToggle.bind( this );\n\t\tthis.renderContent = this.renderContent.bind( this );\n\t}\n\n\tonToggle( isOpen ) {\n\t\tconst { onToggle } = this.props;\n\n\t\t// Surface toggle callback to parent component\n\t\tif ( onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\t/**\n\t * Render callback to display Dropdown toggle element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onToggle Callback to invoke when toggle is\n\t *                                    pressed.\n\t * @param {boolean}  options.isOpen   Whether dropdown is currently open.\n\t *\n\t * @return {WPElement} Dropdown toggle element.\n\t */\n\trenderToggle( { onToggle, isOpen } ) {\n\t\tconst {\n\t\t\tdisabled,\n\t\t\tblockTitle,\n\t\t\thasSingleBlockType,\n\t\t\ttoggleProps,\n\t\t\trenderToggle = defaultRenderToggle,\n\t\t} = this.props;\n\n\t\treturn renderToggle( {\n\t\t\tonToggle,\n\t\t\tisOpen,\n\t\t\tdisabled,\n\t\t\tblockTitle,\n\t\t\thasSingleBlockType,\n\t\t\ttoggleProps,\n\t\t} );\n\t}\n\n\t/**\n\t * Render callback to display Dropdown content element.\n\t *\n\t * @param {Object}   options\n\t * @param {Function} options.onClose Callback to invoke when dropdown is\n\t *                                   closed.\n\t *\n\t * @return {WPElement} Dropdown content element.\n\t */\n\trenderContent( { onClose } ) {\n\t\tconst {\n\t\t\trootClientId,\n\t\t\tclientId,\n\t\t\tisAppender,\n\t\t\tshowInserterHelpPanel,\n\t\t\t__experimentalSelectBlockOnInsert: selectBlockOnInsert,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<InserterMenu\n\t\t\t\tonSelect={ onClose }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisAppender={ isAppender }\n\t\t\t\tshowInserterHelpPanel={ showInserterHelpPanel }\n\t\t\t\t__experimentalSelectBlockOnInsert={ selectBlockOnInsert }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tposition,\n\t\t\thasSingleBlockType,\n\t\t\tinsertOnlyAllowedBlock,\n\t\t} = this.props;\n\n\t\tif ( hasSingleBlockType ) {\n\t\t\treturn this.renderToggle( { onToggle: insertOnlyAllowedBlock } );\n\t\t}\n\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\tclassName=\"block-editor-inserter\"\n\t\t\t\tcontentClassName=\"block-editor-inserter__popover\"\n\t\t\t\tposition={ position }\n\t\t\t\tonToggle={ this.onToggle }\n\t\t\t\texpandOnMobile\n\t\t\t\theaderTitle={ __( 'Add a block' ) }\n\t\t\t\trenderToggle={ this.renderToggle }\n\t\t\t\trenderContent={ this.renderContent }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetBlockRootClientId,\n\t\t\thasInserterItems,\n\t\t\t__experimentalGetAllowedBlocks,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getBlockVariations } = select( 'core/blocks' );\n\n\t\trootClientId =\n\t\t\trootClientId || getBlockRootClientId( clientId ) || undefined;\n\n\t\tconst allowedBlocks = __experimentalGetAllowedBlocks( rootClientId );\n\n\t\tconst hasSingleBlockType =\n\t\t\tsize( allowedBlocks ) === 1 &&\n\t\t\tsize(\n\t\t\t\tgetBlockVariations( allowedBlocks[ 0 ].name, 'inserter' )\n\t\t\t) === 0;\n\n\t\tlet allowedBlockType = false;\n\t\tif ( hasSingleBlockType ) {\n\t\t\tallowedBlockType = allowedBlocks[ 0 ];\n\t\t}\n\n\t\treturn {\n\t\t\thasItems: hasInserterItems( rootClientId ),\n\t\t\thasSingleBlockType,\n\t\t\tblockTitle: allowedBlockType ? allowedBlockType.title : '',\n\t\t\tallowedBlockType,\n\t\t\trootClientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\treturn {\n\t\t\tinsertOnlyAllowedBlock() {\n\t\t\t\tconst { rootClientId, clientId, isAppender } = ownProps;\n\t\t\t\tconst {\n\t\t\t\t\thasSingleBlockType,\n\t\t\t\t\tallowedBlockType,\n\t\t\t\t\t__experimentalSelectBlockOnInsert: selectBlockOnInsert,\n\t\t\t\t} = ownProps;\n\n\t\t\t\tif ( ! hasSingleBlockType ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfunction getInsertionIndex() {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tgetBlockIndex,\n\t\t\t\t\t\tgetBlockSelectionEnd,\n\t\t\t\t\t\tgetBlockOrder,\n\t\t\t\t\t} = select( 'core/block-editor' );\n\n\t\t\t\t\t// If the clientId is defined, we insert at the position of the block.\n\t\t\t\t\tif ( clientId ) {\n\t\t\t\t\t\treturn getBlockIndex( clientId, rootClientId );\n\t\t\t\t\t}\n\n\t\t\t\t\t// If there a selected block, we insert after the selected block.\n\t\t\t\t\tconst end = getBlockSelectionEnd();\n\t\t\t\t\tif ( ! isAppender && end ) {\n\t\t\t\t\t\treturn getBlockIndex( end, rootClientId ) + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Otherwise, we insert at the end of the current rootClientId\n\t\t\t\t\treturn getBlockOrder( rootClientId ).length;\n\t\t\t\t}\n\n\t\t\t\tconst { insertBlock } = dispatch( 'core/block-editor' );\n\n\t\t\t\tconst blockToInsert = createBlock( allowedBlockType.name );\n\n\t\t\t\tinsertBlock(\n\t\t\t\t\tblockToInsert,\n\t\t\t\t\tgetInsertionIndex(),\n\t\t\t\t\trootClientId,\n\t\t\t\t\tselectBlockOnInsert\n\t\t\t\t);\n\n\t\t\t\tif ( ! selectBlockOnInsert ) {\n\t\t\t\t\tconst message = sprintf(\n\t\t\t\t\t\t// translators: %s: the name of the block that has been added\n\t\t\t\t\t\t__( '%s block added' ),\n\t\t\t\t\t\tallowedBlockType.title\n\t\t\t\t\t);\n\t\t\t\t\tspeak( message );\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n\tifCondition( ( { hasItems } ) => hasItems ),\n] )( Inserter );\n"]}