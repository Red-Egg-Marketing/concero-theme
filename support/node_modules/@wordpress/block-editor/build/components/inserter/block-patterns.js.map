{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-patterns.js"],"names":["BlockPattern","pattern","onClick","content","blocks","event","ENTER","keyCode","SPACE","title","BlockPatternPlaceholder","BlockPatterns","patterns","onInsert","filterValue","filteredPatterns","currentShownPatterns","createSuccessNotice","onClickPattern","block","type","length","map","index","name"],"mappings":";;;;;;;;;AAQA;;AALA;;AAMA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AArBA;;;;AAKA;;;;AASA;;;AASA,SAASA,YAAT,OAA8C;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,QAAY,QAAZA,OAAY;AAAA,MACrCC,OADqC,GACzBF,OADyB,CACrCE,OADqC;AAE7C,MAAMC,MAAM,GAAG,sBAAS;AAAA,WAAM,mBAAOD,OAAP,CAAN;AAAA,GAAT,EAAiC,CAAEA,OAAF,CAAjC,CAAf;AAEA,SACC;AACC,IAAA,SAAS,EAAC,sCADX;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,OAAO,EAAG;AAAA,aAAMD,QAAO,CAAED,OAAF,EAAWG,MAAX,CAAb;AAAA,KAHX;AAIC,IAAA,SAAS,EAAG,mBAAEC,KAAF,EAAa;AACxB,UAAKC,oBAAUD,KAAK,CAACE,OAAhB,IAA2BC,oBAAUH,KAAK,CAACE,OAAhD,EAA0D;AACzDL,QAAAA,QAAO,CAAED,OAAF,EAAWG,MAAX,CAAP;AACA;AACD,KARF;AASC,IAAA,QAAQ,EAAG,CATZ;AAUC,kBAAaH,OAAO,CAACQ;AAVtB,KAYC,4BAAC,qBAAD;AAAc,IAAA,MAAM,EAAGL;AAAvB,IAZD,EAaC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,OAAO,CAACQ,KADX,CAbD,CADD;AAmBA;;AAED,SAASC,uBAAT,GAAmC;AAClC,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,IADD;AAGA;;AAED,SAASC,aAAT,QAA8D;AAAA,MAApCC,QAAoC,SAApCA,QAAoC;AAAA,MAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,MAAhBC,WAAgB,SAAhBA,WAAgB;AAC7D,MAAMC,gBAAgB,GAAG,sBACxB;AAAA,WAAM,8BAAaH,QAAb,EAAuBE,WAAvB,CAAN;AAAA,GADwB,EAExB,CAAEA,WAAF,EAAeF,QAAf,CAFwB,CAAzB;AAIA,MAAMI,oBAAoB,GAAG,2BAAcD,gBAAd,CAA7B;;AAL6D,qBAM7B,uBAAa,cAAb,CAN6B;AAAA,MAMrDE,mBANqD,gBAMrDA,mBANqD;;AAO7D,MAAMC,cAAc,GAAG,0BAAa,UAAEjB,OAAF,EAAWG,MAAX,EAAuB;AAC1DS,IAAAA,QAAQ,CAAE,iBAAKT,MAAL,EAAa,UAAEe,KAAF;AAAA,aAAa,wBAAYA,KAAZ,CAAb;AAAA,KAAb,CAAF,CAAR;AACAF,IAAAA,mBAAmB,CAClB;AACC;AACA,kBAAI,wBAAJ,CAFD,EAGChB,OAAO,CAACQ,KAHT,CADkB,EAMlB;AACCW,MAAAA,IAAI,EAAE;AADP,KANkB,CAAnB;AAUA,GAZsB,EAYpB,EAZoB,CAAvB;AAcA,SAAO,CAAC,CAAEL,gBAAgB,CAACM,MAApB,GACN,4BAAC,cAAD;AACC,IAAA,KAAK,EACJP,WAAW,GACR,cAAI,gBAAJ,CADQ,GAER,cAAI,KAAJ,EAAW,qBAAX;AAJL,KAOGC,gBAAgB,CAACO,GAAjB,CAAsB,UAAErB,OAAF,EAAWsB,KAAX;AAAA,WACvBP,oBAAoB,CAAEO,KAAF,CAApB,KAAkCtB,OAAlC,GACC,4BAAC,YAAD;AACC,MAAA,GAAG,EAAGA,OAAO,CAACuB,IADf;AAEC,MAAA,OAAO,EAAGvB,OAFX;AAGC,MAAA,OAAO,EAAGiB;AAHX,MADD,GAOC,4BAAC,uBAAD;AAAyB,MAAA,GAAG,EAAGjB,OAAO,CAACuB;AAAvC,MARsB;AAAA,GAAtB,CAPH,CADM,GAqBN,4BAAC,kBAAD,OArBD;AAuBA;;eAEcb,a","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { parse, cloneBlock } from '@wordpress/blocks';\nimport { useDispatch } from '@wordpress/data';\nimport { ENTER, SPACE } from '@wordpress/keycodes';\nimport { __, sprintf, _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport BlockPreview from '../block-preview';\nimport useAsyncList from './use-async-list';\nimport InserterPanel from './panel';\nimport { searchItems } from './search-items';\nimport InserterNoResults from './no-results';\n\nfunction BlockPattern( { pattern, onClick } ) {\n\tconst { content } = pattern;\n\tconst blocks = useMemo( () => parse( content ), [ content ] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"block-editor-inserter__patterns-item\"\n\t\t\trole=\"button\"\n\t\t\tonClick={ () => onClick( pattern, blocks ) }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( ENTER === event.keyCode || SPACE === event.keyCode ) {\n\t\t\t\t\tonClick( pattern, blocks );\n\t\t\t\t}\n\t\t\t} }\n\t\t\ttabIndex={ 0 }\n\t\t\taria-label={ pattern.title }\n\t\t>\n\t\t\t<BlockPreview blocks={ blocks } />\n\t\t\t<div className=\"block-editor-inserter__patterns-item-title\">\n\t\t\t\t{ pattern.title }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction BlockPatternPlaceholder() {\n\treturn (\n\t\t<div className=\"block-editor-inserter__patterns-item is-placeholder\" />\n\t);\n}\n\nfunction BlockPatterns( { patterns, onInsert, filterValue } ) {\n\tconst filteredPatterns = useMemo(\n\t\t() => searchItems( patterns, filterValue ),\n\t\t[ filterValue, patterns ]\n\t);\n\tconst currentShownPatterns = useAsyncList( filteredPatterns );\n\tconst { createSuccessNotice } = useDispatch( 'core/notices' );\n\tconst onClickPattern = useCallback( ( pattern, blocks ) => {\n\t\tonInsert( map( blocks, ( block ) => cloneBlock( block ) ) );\n\t\tcreateSuccessNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: block pattern title. */\n\t\t\t\t__( 'Pattern \"%s\" inserted.' ),\n\t\t\t\tpattern.title\n\t\t\t),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t}\n\t\t);\n\t}, [] );\n\n\treturn !! filteredPatterns.length ? (\n\t\t<InserterPanel\n\t\t\ttitle={\n\t\t\t\tfilterValue\n\t\t\t\t\t? __( 'Search Results' )\n\t\t\t\t\t: _x( 'All', 'patterns categories' )\n\t\t\t}\n\t\t>\n\t\t\t{ filteredPatterns.map( ( pattern, index ) =>\n\t\t\t\tcurrentShownPatterns[ index ] === pattern ? (\n\t\t\t\t\t<BlockPattern\n\t\t\t\t\t\tkey={ pattern.name }\n\t\t\t\t\t\tpattern={ pattern }\n\t\t\t\t\t\tonClick={ onClickPattern }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<BlockPatternPlaceholder key={ pattern.name } />\n\t\t\t\t)\n\t\t\t) }\n\t\t</InserterPanel>\n\t) : (\n\t\t<InserterNoResults />\n\t);\n}\n\nexport default BlockPatterns;\n"]}