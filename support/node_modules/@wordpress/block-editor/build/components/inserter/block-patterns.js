"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _blocks = require("@wordpress/blocks");

var _data = require("@wordpress/data");

var _keycodes = require("@wordpress/keycodes");

var _i18n = require("@wordpress/i18n");

var _blockPreview = _interopRequireDefault(require("../block-preview"));

var _useAsyncList = _interopRequireDefault(require("./use-async-list"));

var _panel = _interopRequireDefault(require("./panel"));

var _searchItems = require("./search-items");

var _noResults = _interopRequireDefault(require("./no-results"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function BlockPattern(_ref) {
  var pattern = _ref.pattern,
      _onClick = _ref.onClick;
  var content = pattern.content;
  var blocks = (0, _element.useMemo)(function () {
    return (0, _blocks.parse)(content);
  }, [content]);
  return (0, _element.createElement)("div", {
    className: "block-editor-inserter__patterns-item",
    role: "button",
    onClick: function onClick() {
      return _onClick(pattern, blocks);
    },
    onKeyDown: function onKeyDown(event) {
      if (_keycodes.ENTER === event.keyCode || _keycodes.SPACE === event.keyCode) {
        _onClick(pattern, blocks);
      }
    },
    tabIndex: 0,
    "aria-label": pattern.title
  }, (0, _element.createElement)(_blockPreview.default, {
    blocks: blocks
  }), (0, _element.createElement)("div", {
    className: "block-editor-inserter__patterns-item-title"
  }, pattern.title));
}

function BlockPatternPlaceholder() {
  return (0, _element.createElement)("div", {
    className: "block-editor-inserter__patterns-item is-placeholder"
  });
}

function BlockPatterns(_ref2) {
  var patterns = _ref2.patterns,
      onInsert = _ref2.onInsert,
      filterValue = _ref2.filterValue;
  var filteredPatterns = (0, _element.useMemo)(function () {
    return (0, _searchItems.searchItems)(patterns, filterValue);
  }, [filterValue, patterns]);
  var currentShownPatterns = (0, _useAsyncList.default)(filteredPatterns);

  var _useDispatch = (0, _data.useDispatch)('core/notices'),
      createSuccessNotice = _useDispatch.createSuccessNotice;

  var onClickPattern = (0, _element.useCallback)(function (pattern, blocks) {
    onInsert((0, _lodash.map)(blocks, function (block) {
      return (0, _blocks.cloneBlock)(block);
    }));
    createSuccessNotice((0, _i18n.sprintf)(
    /* translators: %s: block pattern title. */
    (0, _i18n.__)('Pattern "%s" inserted.'), pattern.title), {
      type: 'snackbar'
    });
  }, []);
  return !!filteredPatterns.length ? (0, _element.createElement)(_panel.default, {
    title: filterValue ? (0, _i18n.__)('Search Results') : (0, _i18n._x)('All', 'patterns categories')
  }, filteredPatterns.map(function (pattern, index) {
    return currentShownPatterns[index] === pattern ? (0, _element.createElement)(BlockPattern, {
      key: pattern.name,
      pattern: pattern,
      onClick: onClickPattern
    }) : (0, _element.createElement)(BlockPatternPlaceholder, {
      key: pattern.name
    });
  })) : (0, _element.createElement)(_noResults.default, null);
}

var _default = BlockPatterns;
exports.default = _default;
//# sourceMappingURL=block-patterns.js.map